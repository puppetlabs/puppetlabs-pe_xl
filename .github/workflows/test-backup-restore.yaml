---
name: "Backup and restore test"

on:
  workflow_dispatch:
    inputs:
      image:
        description: 'GCP image for test cluster'
        required: true
        default: 'almalinux-cloud/almalinux-8'
      architecture:
        description: 'PE architecture to test'
        required: true
        default: 'standard'
      version:
        description: 'PE version to install'
        required: true
        default: '2021.7.2'
      ssh-debugging:
        description: 'Boolean; whether or not to pause for ssh debugging'
        required: true
        default: 'false'

jobs:
  install-cluster-A:
    name: "Cluster A: PE ${{ inputs.version }} ${{ inputs.architecture }} on ${{ inputs.image }}"
    runs-on: ubuntu-20.04
    env:
      BOLT_GEM: true
      BOLT_DISABLE_ANALYTICS: true
      LANG: 'en_US.UTF-8'

    steps:
      - name: "Checkout Source"
        uses: actions/checkout@v2

      - name: "Activate Ruby 2.7"
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "2.7"
          bundler-cache: true

      - name: "Print bundle environment"
        if: ${{ github.repository_owner == 'puppetlabs' }}
        run: |
          echo ::group::info:bundler
            bundle env
          echo ::endgroup::

      - name: 'Provision test cluster'
        timeout-minutes: 15
        run: |
          echo ::group::prepare
            mkdir -p $HOME/.ssh
            echo 'Host *'                      >  $HOME/.ssh/config
            echo '    ServerAliveInterval 150' >> $HOME/.ssh/config
            echo '    ServerAliveCountMax 2'   >> $HOME/.ssh/config
            bundle exec rake spec_prep
          echo ::endgroup::

          echo ::group::provision
              bundle exec bolt plan run peadm_spec::provision_test_cluster \
                --modulepath spec/fixtures/modules \
                provider=provision_service \
                image=${{ inputs.image }} \
                architecture=${{ inputs.architecture }}
          echo ::endgroup::

          echo ::group::info:request
            cat request.json || true; echo
          echo ::endgroup::

          echo ::group::info:inventory
            sed -e 's/password: .*/password: "[redacted]"/' < spec/fixtures/litmus_inventory.yaml || true
          echo ::endgroup::

      - name: Save inventory file A to an artifact
        uses: actions/upload-artifact@v3
        with:
          name: inventory_A
          path: spec/fixtures/litmus_inventory.yaml

      - name: 'Install PE on test cluster'
        timeout-minutes: 120
        run: |
            bundle exec bolt plan run peadm_spec::install_test_cluster \
              --inventoryfile spec/fixtures/litmus_inventory.yaml \
              --modulepath spec/fixtures/modules \
              architecture=${{ inputs.architecture }} \
              version=${{ inputs.version }}

  install-cluster-B:
    name: "Cluster B: PE ${{ inputs.version }} ${{ inputs.architecture }} on ${{ inputs.image }}"
    runs-on: ubuntu-20.04
    env:
      BOLT_GEM: true
      BOLT_DISABLE_ANALYTICS: true
      LANG: 'en_US.UTF-8'

    steps:
      - name: 'Start SSH session'
        if: ${{ github.event.inputs.ssh-debugging == 'true' }}
        uses: luchihoratiu/debug-via-ssh@main
        with:
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
          SSH_PASS: ${{ secrets.SSH_PASS }}

      - name: "Checkout Source"
        uses: actions/checkout@v2

      - name: "Activate Ruby 2.7"
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "2.7"
          bundler-cache: true

      - name: "Print bundle environment"
        if: ${{ github.repository_owner == 'puppetlabs' }}
        run: |
          echo ::group::info:bundler
            bundle env
          echo ::endgroup::

      - name: 'Provision test cluster'
        timeout-minutes: 15
        run: |
          echo ::group::prepare
            mkdir -p $HOME/.ssh
            echo 'Host *'                      >  $HOME/.ssh/config
            echo '    ServerAliveInterval 150' >> $HOME/.ssh/config
            echo '    ServerAliveCountMax 2'   >> $HOME/.ssh/config
            bundle exec rake spec_prep
          echo ::endgroup::

          echo ::group::provision
              bundle exec bolt plan run peadm_spec::provision_test_cluster \
                --modulepath spec/fixtures/modules \
                provider=provision_service \
                image=${{ inputs.image }} \
                architecture=${{ inputs.architecture }}
          echo ::endgroup::

          echo ::group::info:request
            cat request.json || true; echo
          echo ::endgroup::

          echo ::group::info:inventory
            sed -e 's/password: .*/password: "[redacted]"/' < spec/fixtures/litmus_inventory.yaml || true
          echo ::endgroup::

      - name: Save inventory file B to an artifact
        uses: actions/upload-artifact@v3
        with:
          name: inventory_B
          path: spec/fixtures/litmus_inventory.yaml
    
      - name: 'Install PE on test cluster'
        timeout-minutes: 120
        run: |
            bundle exec bolt plan run peadm_spec::install_test_cluster \
              --inventoryfile spec/fixtures/litmus_inventory.yaml \
              --modulepath spec/fixtures/modules \
              architecture=${{ inputs.architecture }} \
              version=${{ inputs.version }}
            
  test-backup-restore:
    runs-on: ubuntu-20.04
    env:
      BOLT_GEM: true
      BOLT_DISABLE_ANALYTICS: true
      LANG: 'en_US.UTF-8'
    needs: [install-cluster-A, install-cluster-B]

    steps:
      - name: 'Start SSH session'
        if: ${{ github.event.inputs.ssh-debugging == 'true' }}
        uses: luchihoratiu/debug-via-ssh@main
        with:
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
          SSH_PASS: ${{ secrets.SSH_PASS }}

      - name: "Checkout Source"
        uses: actions/checkout@v2
  
      - name: "Activate Ruby 2.7"
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "2.7"
          bundler-cache: true
  
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: spec/fixtures/

      - name: perform PE backup of cluster A
        timeout-minutes: 10
        run: |
          echo ::group::prepare
            mkdir -p $HOME/.ssh
            echo 'Host *'                      >  $HOME/.ssh/config
            echo '    ServerAliveInterval 150' >> $HOME/.ssh/config
            echo '    ServerAliveCountMax 2'   >> $HOME/.ssh/config
            bundle exec rake spec_prep
          echo ::endgroup::

          echo ::group::backup
            bundle exec bolt plan run peadm_spec::test_backup \
              --inventoryfile spec/fixtures/inventory_A/litmus_inventory.yaml \
              --modulepath spec/fixtures/modules
          echo ::endgroup::

      - name: Wait while the pause file is present
        if: ${{ github.event.inputs.ssh-debugging == 'true' }}
        run: |
          while [ -f pause ]; do
            echo "Waiting for pause file to be removed"
            sleep 10
          done

      - name: 'Tear down cluster A'
        if: ${{ always() }}
        continue-on-error: true
        run: |
          cp spec/fixtures/inventory_A/litmus_inventory.yaml spec/fixtures/litmus_inventory.yaml || true
          if [ -f spec/fixtures/litmus_inventory.yaml ]; then
            echo ::group::tear_down
              bundle exec rake 'litmus:tear_down'
            echo ::endgroup::

            echo ::group::info:request
              cat request.json || true; echo
            echo ::endgroup::
          fi

      - name: 'Tear down cluster B'
        if: ${{ always() }}
        continue-on-error: true
        run: |
          cp spec/fixtures/inventory_B/litmus_inventory.yaml spec/fixtures/litmus_inventory.yaml || true
          if [ -f spec/fixtures/litmus_inventory.yaml ]; then
            echo ::group::tear_down
              bundle exec rake 'litmus:tear_down'
            echo ::endgroup::

            echo ::group::info:request
              cat request.json || true; echo
            echo ::endgroup::
          fi
  
